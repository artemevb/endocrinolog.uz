"use client";
import { useEffect, useState } from 'react';
import Image from "next/image";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import ReviewModal from '../Modals/Reviews';

import eventImage4 from "@/public/images/face/Ellipse1.png";

const reviews = [
    {
        name: "–ì–∞–ª–∏–Ω–∞ –§–∏–ª–∏–ø–ø–æ–≤–∞",
        rating: 5,
        review: "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä,6 —è–Ω–≤–∞—Ä—è —Å–¥–µ–ª–∞–ª–∏ –ú–∞—Ä–∏–Ω–µ –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞ –≤—Ç–æ—Ä–æ–π –≥–ª–∞–∑,–°–ª–∞–≤–∞ –ë–æ–≥—É ,—É—Å–ø–µ—à–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç –æ–±–æ–∏–º–∏ –≥–ª–∞–∑–∫–∞–º–∏.–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã.–ï—â–µ —Ä–∞–∑ —Å–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ —É—á–∞—Å—Ç–∏–µ,–ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –∑–∞ –¥–æ–±—Ä—ã–µ —Å–ª–æ–≤–∞!–í—ã –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫,–±–æ–ª—å—à–∞—è –£–ú–ù–ò–¶–ê!–ñ–µ–ª–∞–µ–º –í–∞–º –∏ –≤—Å–µ–π –í–∞—à–µ–π —Å–µ–º—å–µ –∑–¥–æ—Ä–æ–≤—å—è,–≤—Å–µ—Ö –∑–µ–º–Ω—ã—Ö –±–ª–∞–≥ –∏ –±–æ–ª—å—à–æ–≥–æ —Å—á–∞—Å—Ç—å—è!",
        imageSrc: null,
        clinics: "Telegram",
    },
    {
        name: "–ù–∞—Å–∏–±–∞ –ì–∞–Ω–∏–µ–≤–∞",
        rating: 5,
        review: "–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –í–∞–º –∑–∞ –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å",
        imageSrc: null,
        clinics: "Telegram",
    },
    {
        name: "Aziza",
        rating: 5,
        review: "–ê–∑–∏–∑–∞ –æ–ø–∞ —ç—Ç–∞ –≤–∞—à–∞ –∑–∞—Å–ª—É–≥–∞! –≠–Ω–≥ –∫–∏–π–∏–Ω –ø–∞–π—Ç–¥–∞ —Å–∏–∑ –±–∏–∑–∞–≥–∞ –∫–æ—Ç—Ç–∞ –µ—Ä–¥–∞–º –±–µ—Ä–¥–∏–∑ –∏ —à—É –∫—É–Ω–≥–∞—á–∞ –±–µ—Ä–∏–± –∫–µ–≤–æ—Å–∏–∑. –ú—ã –í–∞–º –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã!",
        imageSrc: null,
        clinics: "Telegram",
    },
    {
        name: "–ì–∞–ª–∏–Ω–∞ –§–∏–ª–∏–ø–ø–æ–≤–∞",
        rating: 5,
        review: "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä,6 —è–Ω–≤–∞—Ä—è —Å–¥–µ–ª–∞–ª–∏ –ú–∞—Ä–∏–Ω–µ –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞ –≤—Ç–æ—Ä–æ–π –≥–ª–∞–∑,–°–ª–∞–≤–∞ –ë–æ–≥—É ,—É—Å–ø–µ—à–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç –æ–±–æ–∏–º–∏ –≥–ª–∞–∑–∫–∞–º–∏.–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã.–ï—â–µ —Ä–∞–∑ —Å–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ —É—á–∞—Å—Ç–∏–µ,–ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –∑–∞ –¥–æ–±—Ä—ã–µ —Å–ª–æ–≤–∞!–í—ã –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫,–±–æ–ª—å—à–∞—è –£–ú–ù–ò–¶–ê!–ñ–µ–ª–∞–µ–º –í–∞–º –∏ –≤—Å–µ–π –í–∞—à–µ–π —Å–µ–º—å–µ –∑–¥–æ—Ä–æ–≤—å—è,–≤—Å–µ—Ö –∑–µ–º–Ω—ã—Ö –±–ª–∞–≥ –∏ –±–æ–ª—å—à–æ–≥–æ —Å—á–∞—Å—Ç—å—è!",
        imageSrc: null,
        clinics: "Telegram",
    },
    {
        name: "Svetlana",
        rating: 5,
        review: "–Ø –≤—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –±—É–¥—É –≤–∞–º —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å –∫–∞–∫ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä, –¥–∏–∑–∞–π–Ω–µ—Ä, —á—Ç–æ–±—ã –∫–∞–∫—É—é —Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –í–∞–º –≤—ã—Ä–∞–∑–∏—Ç—å. –ß—Ç–æ–±—ã —Ö–æ—Ä–æ—à–∏–º –ª—é–¥—è–º –¥–æ–±—Ä–æ –≤–æ–∑—Ä–∞—â–∞–ª–æ—Å—å",
        imageSrc: null,
        clinics: "Telegram",
    },

    {
        name: "Dildora Rafikova",
        rating: 5,
        review: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –ê–∑–∏–∑–∞ –®–∞—Ö–∑–æ–¥–∏–µ–≤–Ω–∞! –ö–∞–∫ –≤—ã –ø–æ–∂–∏–≤–∞–µ—Ç–µ?  –•–æ—Ç–µ–ª–∞ –≤–∞—Å –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å, –∑–∞ –≤–∞—à–∏ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞ –∏ –ª—é–±–æ–≤—å –∫ –ª—é–¥—è–º. –í—ã –º–Ω–æ–≥–∏–º –º–æ–∏–º  –∑–Ω–∞–∫–æ–º—ã–º –ø–æ–º–æ–≥–ª–∏ . –ú—ã –≤—Å–µ –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, —á—Ç–æ  –ë–æ–≥ –ø–æ–¥–∞—Ä–∏–ª –≤–∞—Å –Ω–∞–º! –ë–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è!  –ú—ã –ª—é–±–∏–º –≤–∞—Å!‚ù§Ô∏èüòòüòòüòòüòò. –ö–∞–∂–¥—ã–π –≤–∞—à —Ç—Ä—É–¥ –Ω–µ –∑–∞–±—ã—Ç –≤ –Ω–∞—à–µ–º —Å–µ—Ä–¥—Ü–µ , –º—ã –≤–∞—Å —Ü–µ–Ω–∏–º.!",
        imageSrc: null,
        clinics: "Telegram",
    },
    {
        name: "–¢–∞–ø–∏—è –§–µ—Ä–Ω–∞–Ω–¥–µ—Å",
        rating: 5,
        review: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –º–æ–π –¥–æ—Ä–æ–≥–æ–π –¥–æ–∫—Ç–æ—Ä –ê–∑–∏–∑–∞ –æ–ø–∞, –≤—Å–µ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–æ—Å—å —Å–µ–±—è —á—É–≤—Å—Ç–≤—É—é —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ –í–∞–º –±–æ–ª—å—à–æ–µ –∏ –ø—Ä–æ—Å—Ç–∏—Ç–µ –∑–∞ —Ç–æ, —á—Ç–æ –≤—Å–µ –≤—Ä–µ–º—è –í–∞—Å –±–µ—Å–ø–æ–∫–æ—é.",
        imageSrc: null,
        clinics: "Telegram",
    },
    {
        name: "–ù–æ—Ä–æ–≤ –ê–∑–∞–º–∞—Ç",
        rating: 5,
        review: "–£–≤–∞–∂–∞–µ–º–∞—è –ê–∑–∏–∑–∞ –®–∞—Ö–∑–∞–¥–∞–µ–≤–Ω–∞, –û—Ç –≤—Å–µ–π –¥—É—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –í–∞—Å —Å –í—Å–µ–º–∏—Ä–Ω—ã–º –¥–Ω—ë–º —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–æ–≤ –∏ –î–Ω—ë–º –±–æ—Ä—å–±—ã —Å —Å–∞—Ö–∞—Ä–Ω—ã–º –¥–∏–∞–±–µ—Ç–æ–º! –í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞, –∞ –±–µ—Å—Ü–µ–Ω–Ω—ã–π –≤–∫–ª–∞–¥ –≤ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –í—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å.–ü–æ—Ä–æ–π —Å–ª–æ–∂–Ω–æ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–∞ –∏ –∑–Ω–∞—á–∏–º–∞ –í–∞—à–∞ –ø–æ–º–æ—â—å, –∑–∞–±–æ—Ç–∞ –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ. –î–ª—è –º–Ω–æ–≥–∏—Ö –í—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –Ω–µ —Ç–æ–ª—å–∫–æ –≤—Ä–∞—á–æ–º, –Ω–æ –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–æ—Å—Ç–æ –ª–µ—á–∏—Ç, –∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–ª—É—à–∏–≤–∞–µ—Ç, –±—É–¥—Ç–æ –ø—Å–∏—Ö–æ–ª–æ–≥, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–∏—Ä–∞—è—Å—å –≤ –ø—Ä–∏—á–∏–Ω–∞—Ö –∏ —Å–∏–º–ø—Ç–æ–º–∞—Ö, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —á–µ–ª–æ–≤–µ–∫.–í–∞—à–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–∞—Ä—è—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –±—É–¥—É—â–µ–º –∏ –ø–æ–º–æ–≥–∞—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ª–µ—á–∏—Ç—å, –Ω–æ –∏ –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–≤–æ–µ —Ç–µ–ª–æ, —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –≥—Ä–∞–Ω–∏—Ü—ã.–≠—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è —Ä–µ–¥–∫–æ—Å—Ç—å ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –≥–æ—Ç–æ–≤ –≤—ã—Å–ª—É—à–∞—Ç—å –∫–∞–∂–¥–æ–≥–æ, –æ—Ç–Ω–µ—Å—Ç–∏—Å—å –∫ –∫–∞–∂–¥–æ–º—É —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∏ –¥–æ–±—Ä–æ—Ç–æ–π. –û—Å–æ–±–∞—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –í–∞–º –∑–∞ –í–∞—à—É —Ä–∞–±–æ—Ç—É –≤ –∫–ª–∏–Ω–∏–∫–µ –∏–º.–§–µ–¥–æ—Ä–æ–≤–∏—á, –≥–¥–µ –í—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª–∞–µ—Ç–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –≤–µ—â–∏ –¥–ª—è —Å–≤–æ–∏—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.–í—ã ‚Äî —Ç–æ—Ç, –∫ –∫–æ–º—É –∏–¥—É—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –ª–µ—á–µ–Ω–∏–µ–º, –Ω–æ –∏ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π, –∑–Ω–∞–Ω–∏–µ–º –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º, –∏ –∑–∞ —ç—Ç–æ —è –∏—Å–∫—Ä–µ–Ω–Ω–µ –í–∞—Å —É–≤–∞–∂–∞—é. –ü—É—Å—Ç—å –í–∞—à —Ç—Ä—É–¥ –ø—Ä–∏–Ω–æ—Å–∏—Ç –í–∞–º —Å—Ç–æ–ª—å–∫–æ –∂–µ —Ç–µ–ø–ª–∞ –∏ —Ä–∞–¥–æ—Å—Ç–∏, —Å–∫–æ–ª—å–∫–æ –ø–æ–ª—É—á–∞–µ–º –æ—Ç –í–∞—Å –º—ã, –ø–∞—Ü–∏–µ–Ω—Ç—ã! –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –í–∞—à –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º, –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é, –∞ –í–∞—à –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ –¥—É—à–µ–≤–Ω–∞—è —â–µ–¥—Ä–æ—Å—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–º, –∫—Ç–æ –≤ –í–∞—Å –Ω—É–∂–¥–∞–µ—Ç—Å—è.–ü—É—Å—Ç—å —Å–±—É–¥—É—Ç—Å—è –≤—Å–µ –í–∞—à–∏ –º–µ—á—Ç—ã –∏ —Ü–µ–ª–∏, –∏ –í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –∏ –≥–æ—Ä–¥–æ—Å—Ç—å –∑–∞ —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.–ó–¥–æ—Ä–æ–≤—å—è –í–∞–º! –° –≥–ª—É–±–æ–∫–∏–º —É–≤–∞–∂–µ–Ω–∏–µ–º –∏ –∏—Å–∫—Ä–µ–Ω–Ω–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏, —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç",
        imageSrc: null,
        clinics: "Telegram",
    },

];

const ReviewSlider = () => {
    const [selectedReview, setSelectedReview] = useState(null);
    const [isModalOpen, setIsModalOpen] = useState(false);

    const openModal = (review) => {
        setSelectedReview(review);
        setIsModalOpen(true);
    };

    const closeModal = () => {
        setIsModalOpen(false);
        setSelectedReview(null);
    };

    const settings = {
        arrows: false,
        infinite: true,
        speed: 500,
        slidesToShow: 3,
        slidesToScroll: 1,
        autoplay: true,
        autoplaySpeed: 3000,
        responsive: [
            {
                breakpoint: 1000,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1,
                },
            },
            {
                breakpoint: 600,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                },
            },
        ],
    };

    const useTruncatedText = (text, defaultLength, mdxLength) => {
        const [truncatedText, setTruncatedText] = useState(text);
        const [isTruncated, setIsTruncated] = useState(false);

        useEffect(() => {
            const handleResize = () => {
                const isMdx = window.matchMedia('(min-width: 1440px)').matches;
                const maxLength = isMdx ? mdxLength : defaultLength;

                if (text.length > maxLength) {
                    setTruncatedText(text.slice(0, maxLength) + '...');
                    setIsTruncated(true);
                } else {
                    setTruncatedText(text);
                    setIsTruncated(false);
                }
            };

            handleResize(); // Call it initially to set the correct length
            window.addEventListener('resize', handleResize);

            return () => {
                window.removeEventListener('resize', handleResize);
            };
        }, [text, defaultLength, mdxLength]);

        return { truncatedText, isTruncated };
    };

    const ReviewText = ({ review }) => {
        const { truncatedText, isTruncated } = useTruncatedText(review.review, 258, 467);
        return (
            <>
                <p className="text-gray-600 mt-[20px] font-semibold text-[15px] mdx:text-[15px] mdx:mt-[30px]">
                    {truncatedText}
                </p>
                {isTruncated && (
                    <button
                        onClick={() => openModal(review)}
                        className="text-[#3FAEFF] hover:underline mt-3 block text-[16px] mdx:text-[20px] font-bold"
                    >
                        –í–µ—Å—å –æ—Ç–∑—ã–≤ ‚Üí
                    </button>
                )}
            </>
        );
    };

    const renderImageOrInitial = (review) => {
        if (review.imageSrc) {
            return (
                <Image
                    src={review.imageSrc}
                    height={100}
                    width={100}
                    alt={review.name}
                    className="w-[50px] h-[50px] mdx:w-[60px] mdx:h-[60px] rounded-full"
                />
            );
        } else {
            const initial = review.name.charAt(0).toUpperCase();
            return (
                <div className="w-[50px] h-[50px] mdx:w-[60px] mdx:h-[60px] rounded-full bg-gray-300 flex items-center justify-center">
                    <span className="text-[20px] mdx:text-[24px] font-semibold text-white">{initial}</span>
                </div>
            );
        }
    };

    return (
        <div className="container mx-auto p-4 mt-[100px] mdx:mt-[120px] xl:mt-[170px]">
            <h2 id="reviews" className="font-bold text-[25px] mdx:text-[35px] xl:text-[40px] mb-[25px] mdx:mb-[30px]">–û—Ç–∑—ã–≤—ã</h2>
            <Slider {...settings}>
                {reviews.map((review, index) => (
                    <div key={index} className="p-2">
                        <div className="p-4 bg-white rounded-xl border min-h-[390px] mdx:min-h-[450px] relative">
                            <div className="flex items-center mb-2">
                                <div className="mr-2">
                                    {renderImageOrInitial(review)}
                                </div>
                                <div>
                                    <h3 className="font-semibold text-[18px] mdx:text-[20px]">{review.name}</h3>
                                    <div className="flex items-center">
                                        {Array(review.rating)
                                            .fill()
                                            .map((_, i) => (
                                                <svg
                                                    key={i}
                                                    className="w-4 h-4 text-[#3FAEFF]"
                                                    fill="currentColor"
                                                    viewBox="0 0 20 20"
                                                >
                                                    <path d="M9.049.927L11.9 6.49l6.358.464-4.835 3.897 1.613 6.065L9.05 12.09l-5.986 4.826L4.677 10.85.844 6.952l6.355-.463L9.049.927z" />
                                                </svg>
                                            ))}
                                    </div>
                                </div>
                            </div>
                            <ReviewText review={review} />
                            <div className="absolute right-0 bottom-0 p-2">
                                <p className="text-right text-[14px] mdx:text-[18px] text-[#B8B8B8]">{review.clinics}</p>
                            </div>
                        </div>
                    </div>
                ))}
            </Slider>
            <ReviewModal review={selectedReview} isOpen={isModalOpen} onClose={closeModal} />
        </div>
    );
};

export default ReviewSlider;
